bedrock:
  aws_region: "ap-northeast-1"  # Specify the AWS region where the Bedrock API is available.
  # Note: The accuracy of the generated markdown can be improved by providing details of the content to be generated in system_prompt.
  system_prompt: |
    The following Terraform code defines several calls to the Datadog Monitor module.

    Datadog Alert Design List (Title) Example

    ・ Please output an **Alert Design Document (json table format)** for each alert in the following format as described above.
    ・ The terraform code should be placed with reference to locals.tf.
    ・ The Alert Message column should be extracted from the terraform code and put the values as they are while expanding local. (e.g., message value) )
        sample)
          ```
          message = <<-EOT

          EOT
          ```
          Create the value while expanding local.tf for the contents of
    ・ Put the local variable as it is for the destination of the notification.
    ・ Put the local variable as it is for the destination of the Query.
    ・ Put the local variable as it is for the destination of the tag.
    ・ Put the local variable as it is for the destination of the alert message.
    ・ For threshold values, if the local variable is a numerical value, insert the value as is. If the local variable is a calculation formula, insert the calculation result and also include the formula itself in the format (calculation formula). Calculation formulas should be defined as local variables.
    ・ Monitor name prefix: [${local.env}] must never be included in the title.
    ・ Output should be in Japanese.
    ・ Create columns for local dev, stg, and prd environments, respectively.
  # Note: Using JSON Schema to describe output_json will increase the accuracy of the prompt.
  output_json: |
    {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "type": "array",
      "title": "Datadog Alert Design Schema",
      "description": "Schema for Datadog alert design document",
      "items": {
        "type": "object",
        "properties": {
          "モニター名": {"type": "string", "description": "モニターの名前"},
          "タイプ": {"type": "string", "description": "モニターのタイプ (例: query alert)"},
          "クエリ": {"type": "string", "description": "Datadogモニターのクエリ"},
          "評価期間": {"type": "string", "description": "評価期間 (例: 5分)"},
          "通知先": {"type": "string", "description": "通知先 (例: Slackチャンネル)"},
          "タグ": {"type": "string", "description": "モニターに関連付けられたタグ"},
          "アラートメッセージ": {"type": "string", "description": "アラート発生時のメッセージ"},
          "備考": {"type": "string", "description": "モニターに関する備考"},
          "dev 閾値条件": {"type": "string", "description": "開発環境の閾値条件"},
          "stg 閾値条件": {"type": "string", "description": "ステージング環境の閾値条件"},
          "prd 閾値条件": {"type": "string", "description": "本番環境の閾値条件"}
        },
        "required": [
          "モニター名", "タイプ", "クエリ", "評価期間", "通知先", "タグ",
          "アラートメッセージ", "備考", "dev 閾値条件", "stg 閾値条件", "prd 閾値条件"
        ]
      }
    }
  # Note: The following is the configuration for the Bedrock API.
  payload:
    anthropic_version: "bedrock-2023-05-31"  # API version of Anthropic (e.g. Claude) to be used. Specify specific version for bedrock integration.
    max_tokens: 4096                         # Maximum number of tokens generated by the model. Limit the length of the response.
    temperature: 0                           # Control the randomness of the output (0 is fully deterministic = most predictable response).
    top_p: 1                                 # Parameters for nucleus sampling. 1 is selected from the top 100% = no limit.
    top_k: 0                                 # Random selection from top k tokens (0 is disabled, i.e., all are eligible).

  read_timeout: 120
  connect_timeout: 30

  retries:
    max_attempts: 5
    mode: standard

# Note: The format should be the same as the output_json format of the markdown you wish to generate(output_json)
schema_columns:
  - モニター名
  - タイプ
  - クエリ
  - 評価期間
  - 通知先
  - タグ
  - アラートメッセージ
  - 備考
  - dev 閾値条件
  - stg 閾値条件
  - prd 閾値条件

output:
  # Note: You can specify the name of the intermediate file to generate the markdown.
  json_path: output/output.json
  # Note: You can specify the markdown_path name.
  markdown_path: output/output.md
  # Note: You can specify the format of markdown_template.
  # Note: support template title & table
  markdown_template: |
    ##### {title}

    {table}

input:
  # Note: Please describe the hcl file of terraform in which you want to generate the document.
  resource_data:
    files:
      # - test_data/monitor1/elasticache.tf
      - sample/test_data/monitor/appsync_monitor.tf
      # - sample/test_data/monitor/apigateway_monitor.tf
    # folder: test_data/monitor

  # Note: local.tf <env>(key):<directly>/file(value)
  local_files:
    # - dev: test_data/monitor1/dev/locals.tf
    # - stg: test_data/monitor1/stg/locals.tf
    # - prd: test_data/monitor1/prd/locals.tf
    - dev: sample/test_data/dev/locals.tf
    - stg: sample/test_data/stg/locals.tf
    - prd: sample/test_data/prd/locals.tf

  modules:
    # Note: Specify the modules (code in which the resource is described) of the resource for which you want to generate documentation.
    path: sample/test_data/modules/monitor/main.tf
    enabled: true  # This allows you to switch between availability and unavailability.

  # Note: Specify the modules (code in which the resource is described) of the resource for which you want to generate documentation.
  failback:
    enabled: true  # This allows you to switch between availability and unavailability.
    # Note: For type, select modules or resource.
    type: modules
    # Note: The option can only be selected for the modules type.
    options:
      target: monitors
