bedrock:
  aws_region: "ap-northeast-1"  # Specify the AWS region where the Bedrock API is available.
  # Note: The accuracy of the generated markdown can be improved by providing details of the content to be generated in system_prompt.
  system_prompt: |
    You are a Terraform code analyzer specializing in Datadog monitor configurations.

    Your task is to analyze the provided Terraform code and locals files to generate a JSON document that describes ALL monitor configurations defined in the locals.

    Important rules for analysis:
    1. Parse the locals.tf files for each environment (dev, stg, prd) to understand the configuration values
    2. Identify ALL monitors in the locals configuration (e.g., error, latency, etc.)
    3. For EACH monitor found in locals:
       - Extract the monitor name without any environment prefix
       - Use the exact query from the configuration
       - Extract the message content as is
       - For thresholds, combine critical and warning values in the format "critical: X, warning: Y"
       - Include notification channels and tags from locals if available
       - Set evaluation period based on the timeframe in the query (e.g., "last_5m" = "5分")
       - Create a separate JSON object for each monitor

    Output format:
    - Generate a JSON array where each object represents a monitor
    - Each object must follow the schema provided in output_json
    - All values must be in Japanese where appropriate
    - Use "<UNKNOWN>" for any values that cannot be determined from the configuration

    Remember:
    - Process ALL monitors defined in locals.appsync_monitors (error, latency, etc.)
    - Each monitor should be a separate object in the output JSON array
    - Analyze the relationship between locals and monitor definitions
    - Extract and combine values from both the monitor definition and corresponding locals
    - Ensure all required fields are present in each monitor object
  # Note: Using JSON Schema to describe output_json will increase the accuracy of the prompt.
  output_json: |
    {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "type": "array",
      "title": "Datadog Alert Design Schema",
      "description": "Schema for Datadog alert design document",
      "items": {
        "type": "object",
        "properties": {
      "monitor_name": {"type": "string", "description": "モニターの名前"},
      "type": {"type": "string", "description": "モニターのタイプ (例: query alert)"},
      "query": {"type": "string", "description": "Datadogモニターのクエリ"},
      "evaluation_period": {"type": "string", "description": "評価期間 (例: 5分)"},
      "notification": {"type": "string", "description": "通知先 (例: Slackチャンネル)"},
      "tags": {"type": "string", "description": "モニターに関連付けられたタグ"},
      "alert_message": {"type": "string", "description": "アラート発生時のメッセージ"},
      "note": {"type": "string", "description": "モニターに関する備考"},
      "dev_threshold": {"type": "string", "description": "開発環境の閾値条件"},
      "stg_threshold": {"type": "string", "description": "ステージング環境の閾値条件"},
      "prd_threshold": {"type": "string", "description": "本番環境の閾値条件"}
        },
        "required": [
      "monitor_name", "type", "query", "evaluation_period", "notification", "tags",
      "alert_message", "note", "dev_threshold", "stg_threshold", "prd_threshold"
        ]
      }
    }
  # Note: The following is the configuration for the Bedrock API.
  payload:
    anthropic_version: "bedrock-2023-05-31"  # API version of Anthropic (e.g. Claude) to be used. Specify specific version for bedrock integration.
    max_tokens: 4096                         # Maximum number of tokens generated by the model. Limit the length of the response.
    temperature: 0                           # Control the randomness of the output (0 is fully deterministic = most predictable response).
    top_p: 1                                 # Parameters for nucleus sampling. 1 is selected from the top 100% = no limit.
    top_k: 0                                 # Random selection from top k tokens (0 is disabled, i.e., all are eligible).

  read_timeout: 120
  connect_timeout: 30

  retries:
    max_attempts: 5
    mode: standard

# Note: The format should be the same as the output_json format of the markdown you wish to generate(output_json)
schema_columns:
  - monitor_name
  - type
  - query
  - evaluation_period
  - notification
  - tags
  - alert_message
  - note
  - dev_threshold
  - stg_threshold
  - prd_threshold

output:
  # Note: You can specify the name of the intermediate file to generate the markdown.
  json_path: output/output.json
  # Note: You can specify the markdown_path name.
  markdown_path: output/output.md
  # Note: You can specify the format of markdown_template.
  # Note: support template title & table
  markdown_template: |
    ##### {title}

    {table}

input:
  # Note: Please describe the hcl file of terraform in which you want to generate the document.
  resource_data:
    files:
      # - test_data/monitor1/elasticache.tf
      - sample/test_data/monitor/appsync_monitor.tf
      # - sample/test_data/monitor/apigateway_monitor.tf
    # folder: test_data/monitor

  # Note: local.tf <env>(key):<directly>/file(value)
  local_files:
    # - dev: test_data/monitor1/dev/locals.tf
    # - stg: test_data/monitor1/stg/locals.tf
    # - prd: test_data/monitor1/prd/locals.tf
    - dev: sample/test_data/dev/locals.tf
    - stg: sample/test_data/stg/locals.tf
    - prd: sample/test_data/prd/locals.tf

  modules:
    # Note: Specify the modules (code in which the resource is described) of the resource for which you want to generate documentation.
    path: sample/test_data/modules/monitor/main.tf
    enabled: true  # This allows you to switch between availability and unavailability.

  # Note: Specify the modules (code in which the resource is described) of the resource for which you want to generate documentation.
  failback:
    enabled: true  # This allows you to switch between availability and unavailability.
    # Note: For type, select modules or resource.
    type: modules
    # Note: The option can only be selected for the modules type.
    options:
      target: monitors
