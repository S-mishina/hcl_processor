name: Call Reusable Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize

jobs:
  call-code-check:
    uses: ./.github/workflows/code-check.yaml
    with:
      python-version: '3.10'
  call-ci:
    needs: call-code-check
    uses: ./.github/workflows/unittest.yaml
    with:
      python-version: '3.10'

  generate-third_party_licenses:
    if: github.event_name == 'push' && github.event.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    needs: call-code-check
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.14'
      - name: Install poetry
        run: |
          pip install poetry
      - name: Install dependencies
        run: |
          poetry install
          poetry add pip-licenses
      - name: Generate third-party licenses
        run: |
          poetry run pip-licenses --format=markdown --output-file=third_party_licenses.md
      - name: Generate a token
        id: generate-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
      - name: Commit, push changes to new branch, and create PR
        run: |
          BRANCH_NAME="update-licenses"
          git config --local user.name "github-actions"
          git config --local user.email "github-actions@github.com"

          if [ -n "$(git status --porcelain third_party_licenses.md)" ]; then
            if git ls-remote --exit-code --heads origin $BRANCH_NAME > /dev/null 2>&1; then
              echo "Remote branch $BRANCH_NAME exists. Deleting and recreating it."
              # Delete the remote branch and create a fresh one
              git push origin --delete $BRANCH_NAME || echo "Failed to delete remote branch, continuing..."
              git checkout -b $BRANCH_NAME
            else
              echo "Creating new branch $BRANCH_NAME."
              git checkout -b $BRANCH_NAME
            fi
            
            git add third_party_licenses.md
            git commit -s -m "Update third-party licenses"
            git push origin $BRANCH_NAME
            if ! gh pr view $BRANCH_NAME --json state > /dev/null 2>&1; then
              gh pr create --title "Update third-party licenses" --body "This PR updates the third_party_licenses.md file." --head $BRANCH_NAME --base main
            else
              echo "PR already exists for branch $BRANCH_NAME"
            fi
          else
            echo "No changes in third_party_licenses.md. Skipping commit, push, and PR creation."
          fi
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
  release-page:
    if: github.event_name == 'push' && github.event.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    needs: call-code-check
    steps:
      - uses: release-drafter/release-drafter@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
